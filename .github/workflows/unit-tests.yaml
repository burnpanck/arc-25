name: Unit Tests

on:
  workflow_dispatch:
  push:
    tags: ["v*"]     # e.g. v0.3.2

# Cancel older runs on the same branch/PR
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout (with LFS for hooks that read binary files)
        uses: actions/checkout@v5
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

  tests:
    name: tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.13"]
        experimental: [false]
        include:
          - python-version: "3.14"
            experimental: false

    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout (with LFS fixtures)
        uses: actions/checkout@v5
        with:
          lfs: true
          fetch-depth: 0

      - name: Set up PDM + Python
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - name: Show tool versions
        run: |
          python -V
          pdm -V

      - name: Install (from lock) + test extras
        run: pdm install --frozen-lockfile -G test,kaggle,vision,train

      - name: Cache JAX compilation cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/jax
          key: jax-cache-${{ runner.os }}-py${{ matrix.python-version }}
          restore-keys: |
            jax-cache-${{ runner.os }}-py${{ matrix.python-version }}

      - name: Run pytest
        run: pdm run pytest
        env:
          PYTHONWARNINGS: default
          JAX_COMPILATION_CACHE_DIR: ~/.cache/jax
